import sys

input = sys.stdin.readline

N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]
# 모든 조각의 경우의 수
tetris = [[(0, 0), (0, 1), (0, 2), (0, 3)],
          [(0, 0), (1, 0), (2, 0), (3, 0)],
          [(0, 0), (1, 0), (0, 1), (1, 1)],
          [(0, 0), (1, 0), (2, 0), (2, 1)],
          [(0, 1), (1, 1), (2, 1), (2, 0)],
          [(0, 0), (0, 1), (1, 1), (2, 1)],
          [(0, 0), (0, 1), (1, 0), (2, 0)],
          [(0, 0), (1, 0), (1, 1), (1, 2)],
          [(0, 2), (1, 1), (1, 2), (1, 0)],
          [(0, 0), (0, 1), (0, 2), (1, 2)],
          [(0, 0), (1, 0), (0, 1), (0, 2)],
          [(0, 0), (1, 0), (1, 1), (2, 1)],
          [(0, 1), (1, 1), (1, 0), (2, 0)],
          [(1, 0), (1, 1), (0, 1), (0, 2)],
          [(0, 0), (0, 1), (1, 1), (1, 2)],
          [(0, 1), (1, 0), (1, 1), (1, 2)],
          [(0, 0), (0, 1), (0, 2), (1, 1)],
          [(0, 0), (1, 0), (1, 1), (2, 0)],
          [(0, 1), (1, 1), (1, 0), (2, 1)]]

mx_cnt = 0
for i in range(N):
    for j in range(M):
        # 각 칸마다 테트리스 종류별로 대입
        for k in tetris:
            # 종류마다 카운트 초기화
            cnt = 0
            for l in range(4):
                nx = i + k[l][0]
                ny = j + k[l][1]
                if 0 <= nx < N and 0 <= ny < M:
                    cnt += arr[nx][ny]
                # 배역 밖으로 나가면 종료
                else:
                    break
            # 4칸 모두 탐색 후에 최댓값 갱신
            mx_cnt = max(mx_cnt, cnt)
# print(arr)
print(mx_cnt)
